
/******************************************************************************************
* SQL Language JOIN Special Part Starts
*/


AbstractJoinPart* join() : {
	AbstractJoinPart* left = nullptr;
	AbstractJoinPart* right = nullptr;
}
{
	left=joinTarget()
	[
		(
			right=tableList()
			|
			right=leftJoin()
			|
			right=rightJoin()
			|
			right=innerJoin()
			|
			right=crossJoin()
		)
	]
	
	{
		__ONERROR(left);
		return left;
	}
}

TableList* tableList() : {
	TableList* join = new TableList();
	Token* t = nullptr;
	TableIdentifier* table = nullptr;
}
{
	table=tableIdentifier() {
		join->addTable(table);
		join->setPosition(table);
	}
	(
		t="," {
			join->setPosition(t);
		}
		table=tableIdentifier() {
			join->addTable(table);
			join->setPosition(table);
		}
	)*
	{}
	{
		__ONERROR(join);
		return join;
	}
}

SQLJoinPart* innerJoin() : {
	SQLJoinPart* join = new SQLJoinPart();
	Token* t = nullptr;
}
{
	t=<INNER> {
		join->setPosition(t);
	}
	
	t=<JOIN> {
		join->setPosition(t);
	}
	
	{
		__ONERROR(join);
		return join;
	}
}


SQLJoinPart* leftJoin() : {
	SQLJoinPart* join = new SQLJoinPart();
	Token* t = nullptr;
}
{
	t=<LEFT> {
		join->setPosition(t);
	}
	[
		t=<OUTER> {
			join->setPosition(t);
		}
	]
	t=<JOIN> {
		join->setPosition(t);
	}
	
	{
		__ONERROR(join);
		return join;
	}
}

SQLJoinPart* rightJoin() : {
	SQLJoinPart* join = new SQLJoinPart();
	Token* t = nullptr;
}
{
	t=<RIGHT> {
		join->setPosition(t);
	}
	[
		t=<OUTER> {
			join->setPosition(t);
		}
	]
	t=<JOIN> {
		join->setPosition(t);
	}
	
	{
		__ONERROR(join);
		return join;
	}
}

SQLJoinPart* crossJoin() : {
	SQLJoinPart* join = new SQLJoinPart();
	Token* t = nullptr;
}
{
	t=<CROSS>  {
		join->setPosition(t);
	}
	t=<JOIN>  {
		join->setPosition(t);
	}
	
	{
		__ONERROR(join);
		return join;
	}
}


AbstractJoinPart* joinTarget() : {
	AbstractJoinPart* target = nullptr;
}
{
	(
		target=tableIdentifier()
		|
		target=parenthesisJoinPart()
	)
	{}
	{
		return target;
	}
}

ParenthesisJoinPart* parenthesisJoinPart() : {
	ParenthesisJoinPart* part = new ParenthesisJoinPart();
	Token* t = nullptr;
	AbstractJoinPart* target = nullptr;
}
{
	t="(" {
		part->setPosition(t);
	}
	
	target=join() {
		part->setPart(target);
		part->setPosition(target);
	}
	
	t=")" {
		part->setPosition(t);
	}
	{
		__ONERROR(part);
		return part;
	}
}

TableIdentifier* tableIdentifier() : {
	TableIdentifier* exp = new TableIdentifier();
	Token* t = nullptr;
	Token* t1 = nullptr;
	Token* t2 = nullptr;
}
{
	t1=<IDENTIFIER> {
		exp->setPosition(t1);
	}
	[
		t="." {
			exp->setPosition(t);
		}
		t2=<IDENTIFIER> {
			exp->setPosition(t2);
		}
	]
	{
		if(t2 != nullptr){
			exp->setSchema(_STR(t1));
			exp->setTableName(_STR(t2));
		}
		else{
			exp->setTableName(_STR(t1));
		}
	}
	{
		__ONERROR(exp);
		return exp;
	}
}
